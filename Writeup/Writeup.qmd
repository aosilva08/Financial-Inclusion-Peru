---
title: "30538 Final Project: Financial Inclusion in Peru"
author: "Alejandra Silva"
Github user: aosilva08
date: "2024-10-07"
format: 
  html:
    code-overflow: wrap   
execute:
  eval: true          
  echo: false    
---


<div style="text-align: justify"> 

## Executive Summary

This project focuses on analyzing financial inclusion in Peru, emphasizing the challenges and opportunities within a centralized financial system. Peru’s economic activities are heavily concentrated in Lima, which leaves other regions with limited access to credit. Financial inclusion is essential for empowering small and medium enterprises (SMEs) and driving economic growth across the country. By improving access to credit, particularly in underserved regions, the project aims to highlight the potential for SMEs to stimulate economic activity, create jobs, and reduce regional disparities.

## 1. Objetive

The primary objective of this project is to assess the state of financial inclusion in Peru, focusing on the extent and impact of centralization in the country’s financial system. Specifically, the project aims to:

- Measure the growth and distribution of loans and deposits across different regions of Peru.

- Understand how the economic impact of COVID-19 has affected access to credit and savings behavior in the country.

- Identify the sectors and regions that have been left underserved, exploring ways to enhance financial inclusion, especially for SMEs outside Lima.

The findings will provide insight into how regional disparities in financial access can be addressed and the role targeted interventions might play in supporting economic growth and financial stability.

## 2. Data

The data for this analysis comes primarily from the Financial Stability Authority of Peru and the National Institute of Statistics and Information of Peru (See Figure 1). The datasets used include:

**Financial Authority of Peru - SBS**:

- **Annex 10**: Contains data on loans and deposits, including financial institution codes (FI Codes) and geographic information such as zip codes.
- **Annex 3**: Provides further details on loans, new loans, debtors, and includes industry classification codes and FI codes.
- **Financial Institution Details**: Describes various financial institutions, such as their names, types, and associated codes.

**Institute of Statistics and Information of Peru - INEI**:

- **Industry Details**: Contains classification codes for industries, detailing sector, sub-sector, and their respective names.

**Open Source Github**:

- **Peru GeoJSON**: Geographic data, represented by zip codes, providing geographical features of different regions.

![Figure 1: Data used](Images/Datasets.png)

## 3. Data preprocessing and manipulation

The methodology for this analysis involved several key steps including data preparation, merging data, exploratory analysis and visualizations. For readability, I will explain each code used in the methodology step by step.

### 3.1 Code Snippet 1: Loading and Preprocessing Data

I started by loading all datasets using Pandas, storing them in a dictionary (`dataframes`). Then, I implemented error handling during file loading to ensure that any issues in one dataset didn’t disrupt the entire process.

I created a Date column by converting `PERIODO_ID` to a proper datetime format and filtered the data to include only records from 2012 onwards. Additionally, I created a `YearMonth` column to facilitate grouping by year and month.

```{python}
#| warning: false
#| include: false

### 2.1  Code Snippet 1: Loading and Preprocessing Data

import pandas as pd
import altair as alt
import geopandas as gpd
import os
from pathlib import Path

# File paths for datasets
file_paths = {
    "AN3": "../Data/raw/exportAN3.dsv",
    "AN10": "../Data/raw/exportAN10v3.dsv",
    "ENTIDAD": "../Data/raw/exportENTIDAD.dsv",
    "UBIGEO": "../Data/raw/exportUBIGEO.dsv"
}

# Load datasets into a dictionary
dataframes = {}
for name, path in file_paths.items():
    try:
        dataframes[name] = pd.read_csv(path, delimiter='|', encoding='latin1', low_memory=False)
    except Exception as e:
        print(f"Error loading {name}: {e}")

# Preprocess DataFrames (apply common transformations)
for name in ['AN3', 'AN10']:
    if name in dataframes:
        df = dataframes[name]
        if 'PERIODO_ID' in df.columns:
            df.loc[:, 'Date'] = pd.to_datetime(df['PERIODO_ID'], format='%Y%m%d', errors='coerce')
            df = df.loc[df['Date'] >= '2012-01-01']  #
            df.loc[:, 'YearMonth'] = df['Date'].dt.to_period('M').astype(str)  # Assign YearMonth

            dataframes[name] = df

# Access processed dataframes
AN3, AN10,ENTIDAD, UBIGEO = (
    dataframes['AN3'],
    dataframes['AN10'],
    dataframes['ENTIDAD'],
    dataframes['UBIGEO']
)

```


### 3.2 Code Snippet 2: Mapping Financial Institutions

The dataset `ENTIDAD` included information about financial institutions, much of which was in Spanish. I translated these institution types into English for consistency. Using a dictionary called `fi_type_mapping`, I mapped Spanish descriptions to English for the `FI_TYPE` column. This improved accessibility and consistency throughout my analysis.

```{python}
#| warning: false
#| include: false

### 2.2  Code Snippet 2: Mapping Financial Institutions

import pandas as pd

# Define a mapping from Spanish entity types to English financial institution types
fi_type_mapping = {
    "Caja municipal": "Credit Union",
    "Banco": "Bank",
    "Financiera": "Finance Company",
    "Administradora Hipotecaria": "Mortgage Administrator",
    "Caja rural": "Credit Union",
    "Empresa de Crédito": "Credit Company",
    "Empresa Emisora de Dinero Electrónico": "Electronic Money Issuer",
    "Fondo": "Fund"
}

# Apply the mapping to create the FI_TYPE column
ENTIDAD["FI_TYPE"] = ENTIDAD["ENTIDAD_TIPO"].map(fi_type_mapping)


```

### 3.3 Code Snippet 3: Merging Datasets AN3 and ENTIDAD and Categorizing Loans

I proceeded by merging the AN3 dataset with ENTIDAD using the column `CODIGO_ENTIDAD_ID`, which added details about each financial institution to the main data. 

After merging, I selected key columns and renamed them for improved readability. Loan types were then categorized into broader categories such as "business," "personal," or "mortgages," based on the `TIPO_CREDITO` column. This grouping was performed to streamline the analysis and facilitate clearer insights.

Finally, the processed dataset was saved in the `Data/processed` folder as `an03_final.dsv`.


```{python}
#| warning: false
#| include: false

### 2.3  Code Snippet 3: Merging Datasets and Categorizing Loans

import pandas as pd

# Merge AN3 with ENTIDAD on CODIGO_ENTIDAD_ID
merged_AN3 = pd.merge(AN3, ENTIDAD, on="CODIGO_ENTIDAD_ID", how="left")

# Select and rename columns in a single step
merged_AN3 = merged_AN3[[
    "Date",
    "YearMonth",
    "TIPO_CREDITO",
    "CODIGO_ENTIDAD_ID",
    "FI_TYPE",
    "ENTIDAD_TIPO",
    "SECTOR_ECONOMICO",
    "SALDO_TOTAL_SOLES",
    "NUMERO_NUEVOS_CREDITOS",
    "NUMERO_DEUDORES_CIERRE"
]].rename(columns={
    "SECTOR_ECONOMICO": "Industry",
    "SALDO_TOTAL_SOLES": "Loans",
    "NUMERO_NUEVOS_CREDITOS": "Loans_new",
    "NUMERO_DEUDORES_CIERRE": "Debtors"
})

# Function to categorize loan types based on TIPO_CREDITO
def categorize_loan_type(credit_type):
    if pd.isna(credit_type):
        return None
    elif "CORPORATIVOS" in credit_type :
        return "business"
    elif "HIPOTECARIOS" in credit_type:
        return "mortgages"
    elif "CONSUMO" in credit_type:
        return "personal"
    else:
        return None

merged_AN3["LOAN_TYPE"] = merged_AN3["TIPO_CREDITO"].apply(categorize_loan_type)

# Function to categorize industry names into broader categories
def categorize_industry(industry_name):
    """Categorize industry names into broader categories."""
    mapping = {
        'Agriculture and Fishing': [
            'A. Agricultura,  Ganadería, Caza y Silvicultura',
            'B. Pesca',
            '     A. Agricultura, ganadería, silvicultura y pesca'
        ],
        'Mining and Extraction': [
            'C. Minería',
            '     B. Explotación de minas y canteras'
        ],
        'Manufacturing': [
            'D. Industria Manufacturera',
            '     C. Industria manufacturera'
        ],
        'Utilities': [
            'E. Electricidad, Gas y Agua',
            '     D. Electricidad, gas, vapor y aire acondicionado',
            '     E. Agua, gestión de desechos y descontaminación'
        ],
        'Construction': [
            'F. Construcción',
            '     F. Construcción'
        ],
        'Commerce': [
            'G. Comercio',
            '     G. Comercio'
        ],
        'Hospitality': [
            'H. Hoteles y Restaurantes',
            '     I.  Alojamiento y servicios de comidas'
        ],
        'Transport and Communications': [
            'I. Transporte, Almacensmiento y Comunicaciones',
            '     H. Transporte y almacenamiento',
            '     J. Información y comunicaciones'
        ],
        'Financial and Business Services': [
            'J. Intermediación Financiera',
            'K. Actividades Inmobiliarias, empresariales y de alquiler',
            '     K. Actividades financieras y de seguros',
            '     L. Actividades inmobiliarias',
            '     M. Actividades profesionales, científicas y técnicas'
        ],
        'Public Administration and Services': [
            'L. Administración Pública y Defensa',
            '     O. Administración pública y defensa'
        ],
        'Education': [
            'M. Enseñanza',
            '     P. Enseñanza'
        ],
        'Health and Social Services': [
            'N. Servicios Sociales y de Salud',
            '     Q. Salud humana y asistencia social'
        ],
        'Arts, Entertainment, and Other Services': [
            'O. Otras Actividades de Servicios Comunitarios',
            '     R. Act. artísticas, de entretenimiento y recreativas',
            '     S. Otras actividades de servicios'
        ],
        'Domestic and Extraterritorial Activities': [
            'P,Q.Hogares Privados c/serv.doméstico y Organos Extraterritoriales',
            '     T, U. Act. hogares como empleadores y órganos extraterritoriales'
        ],
        'Personal/Mortgage loans': ['(no aplica)']
    }

    for category, keywords in mapping.items():
        if industry_name in keywords:
            return category
    return 'Unknown'

merged_AN3['industry_cat'] = merged_AN3['Industry'].apply(categorize_industry)

# Save the result to a .dsv file 
merged_AN3.to_csv("../Data/processed/an03_final.dsv", sep='|', index=False)


```

### 3.4 Code Snippet 4: Merging AN10 and Geographic Enrichment

I then focused on the `AN10` dataset, merging it with both `ENTIDAD` and `UBIGEO` to add geographic context.
To standardize the data, I converted all department names to uppercase. Then, I carefully selected columns that were essential for my analysis, renaming them for clarity, such as `Deposits` and `Region`. 

Finally, the processed dataset was saved in the `Data/processed` folder as `an10_final.dsv`.


```{python}
#| warning: false
#| include: false


# Step 1: Merge AN10 with ENTIDAD on CODIGO_ENTIDAD_ID
merged_AN10 = pd.merge(AN10, ENTIDAD, on="CODIGO_ENTIDAD_ID", how="left")

# Step 2: Merge the result with UBIGEO on CODIGO_UBIGEO
merged_AN10 = pd.merge(merged_AN10, UBIGEO, on="CODIGO_UBIGEO", how="left")

merged_AN10['DEPARTAMENTO'] = merged_AN10['DEPARTAMENTO'].str.upper()

# Step 3: Select specific columns and rename them
merged_AN10 = merged_AN10[[
    "PERIODO_ID",
    "Date",
    "YearMonth",
    "CODIGO_ENTIDAD_ID",
    "FI_TYPE",
    "ENTIDAD_TIPO",
    "DEPARTAMENTO",
    "TOTAL_DEPOSITOS",
    "TOTAL_COLOCACIONES"
]].rename(columns={
    "TOTAL_DEPOSITOS": "Deposits",
    "TOTAL_COLOCACIONES": "Loans",
    "DEPARTAMENTO": "Region"
})



#  Save the result to a .dsv file
merged_AN10.to_csv("../Data/processed/an10_final.dsv", sep='|', index=False)


```


## 4. Method and Results

### 3.1 Static Plots

With the data processed and stored in `Data/processed`, I will proceed to analyze the general landscape of loans and deposits from 2012 onwards.

#### 3.1.1 Analysis of Total Loans and Annual Growth Rate in Peru

**Method:**
 To analyze the overall trend in loan levels and their growth rates, I created the plot **Total Loans and Annual Growth Rate** To do so, I first loaded the dataset `an03_final.dsv` and aggregated the data by month to determine the total loan amounts. Then, I calculated the annual growth rate by computing the percentage change over a 12-month period, which helped capture the fluctuations in loan growth. I converted the loan values into millions for better readability. I used this processed data to generate a combined visualization—a bar chart to represent total loans over time, and a line chart to depict the annual growth rate. This provided a clear and comprehensive view of both the level of loans and their corresponding growth trends. Lastly, I saved the chart as an HTML file for ease of access and presentation.

**Interpretation:** 
Before 2020, the graph shows a clear upward trend in total loans, reflecting Peru's economic growth and increasing financial activity. This trend highlights expanding economic activities, where higher credit growth rates are common, especially in developing economies like Peru. The availability of credit supported small and medium enterprises (SMEs) as well as individuals, contributing to economic inclusivity and growth.

The onset of the COVID-19 pandemic in 2020 led to a significant contraction in total loans, with a sharp decline of over 40%. This sudden drop illustrates the severe economic impact that COVID-19 had on the financial system and broader economy. The decline was primarily driven by reduced economic activity, increased uncertainty, and a risk-averse approach adopted by financial institutions. Government-mandated lockdowns further contributed to a decline in demand for loans, as many businesses had to limit or suspend operations. During this period, financial institutions focused on providing relief to borrowers rather than extending new credit. The Financial Authority of Peru reported that financial entities rescheduled approximately S/ 92 billion in loans to alleviate the financial burden on borrowers. This large-scale restructuring contributed to the decline in new loan issuances.

In 2021, a robust recovery in total loans became evident, largely driven by targeted government interventions such as Reactiva Peru. This program aimed to provide much-needed liquidity to struggling businesses, helping them remain operational during the ongoing crisis. These interventions stabilized the financial system and revived lending activities, particularly for businesses that were severely affected. Despite this recovery, fluctuations in the annual growth rate indicate that economic recovery was uneven, with various sectors facing ongoing challenges in adjusting to the new normal.

```{python}

# Load the an03_final.dsv data
AN3 = pd.read_csv("../Data/processed/an03_final.dsv", delimiter='|', encoding='latin1')

# Aggregate data by month and calculate monthly total for Loans
monthly_data = AN3.groupby(['YearMonth']).agg({
    'Loans': 'sum'
}).reset_index()

# Calculate the annual growth rate for Loans
monthly_data['Annual_Growth_Rate'] = monthly_data['Loans'].pct_change(12) * 100

# Convert Loans to millions for display in the chart
monthly_data['Loans_Millions'] = monthly_data['Loans'] / 1_000_000

# Create the combined chart
# Bar chart for Loans in millions
bars = alt.Chart(monthly_data).mark_bar(color='lightblue').encode(
    x=alt.X('YearMonth:T'),
    y=alt.Y('Loans_Millions:Q', title='Total Loans (Millions)', axis=alt.Axis(format='~s'))
)

# Line chart for Annual Growth Rate
lines = alt.Chart(monthly_data).mark_line(color='orange').encode(
    x=alt.X('YearMonth:T', title='Year'),
    y=alt.Y('Annual_Growth_Rate:Q', title='Annual Growth Rate (%)', axis=alt.Axis(format='~s'))
).interactive()

# Combine both charts
chart = alt.layer(bars, lines).resolve_scale(
    y='independent'
).properties(
    title='Total Loans and Annual Growth Rate',
    width=400,
    height=200
)

# Save the chart and display
output_path = "Images/Total Loans and Annual Growth Rate.html"

chart.save(output_path)

chart

```

#### 4.1.2 Analysis of Annual Growth Rate of Loans by Credit Type

**Method:**
To analyze the annual growth rate of loans by credit type, I developed the graph titled **"Annual Growth Rate of Loans by Credit Type"**. To create this, I started by loading the `an03_final.dsv` dataset and groupping the loans by date and credit type. Using these grouped dataset, I calculated the annual growth rate for each credit type, providing insight into how different types of loans grew over time. Finally, I generated a line chart to visualize the growth rates of different loan types, helping highlight trends and differences across categories. 

**Interpretation:** 
This graph provides insights into the varying recovery trajectories for different types of loans in Peru. The data reveals that recovery programs, such as Reactiva Peru, initially concentrated on business loans. This focus was intended to ensure that businesses could remain operational and maintain cash flow, which was critical for the broader economic recovery. As depicted in the graph, business loans experienced an initial surge in growth, driven by these interventions.

By 2021, the government expanded support to household loans, leading to a noticeable improvement in personal and mortgage loans. This expansion was instrumental in helping families manage the economic impact of the pandemic and contributed to a broader recovery. According to the SBS, programs such as "Fondo de Apoyo Empresarial (FAE)" and "Programa de Garantía del Gobierno Nacional (PGGN)" were also introduced to provide guarantees and liquidity to both businesses and households. These measures ensured that the recovery extended beyond the business sector, eventually stabilizing personal and mortgage loans as well.

```{python}
import pandas as pd
import altair as alt

# Load the an03_final.dsv data
AN3 = pd.read_csv("../Data/processed/an03_final.dsv", delimiter='|', encoding='latin1')

# Ensure Loans is in numeric format
AN3['Loans'] = pd.to_numeric(AN3['Loans'], errors='coerce')

# Aggregate data by month and LOAN_TYPE, calculating total for Loans
monthly_data = AN3.groupby(['YearMonth', 'LOAN_TYPE']).agg({
    'Loans': 'sum'
}).reset_index()

# Calculate the annual growth rate for Loans within each LOAN_TYPE
monthly_data['Annual_Growth_Rate'] = monthly_data.groupby('LOAN_TYPE')['Loans'].pct_change(12) * 100

# Create the line chart
chart = alt.Chart(monthly_data).mark_line().encode(
    x=alt.X('YearMonth:T', title='Year'),
    y=alt.Y('Annual_Growth_Rate:Q', title='Annual Growth Rate (%)'),
    color=alt.Color('LOAN_TYPE:N', title='Credit Type'),  # Legend for different credit types
    tooltip=['YearMonth:T', 'LOAN_TYPE:N', 'Annual_Growth_Rate:Q']  # Add tooltips for better interactivity
).properties(
    title='Annual Growth Rate of Loans by Credit Type',
    width=400,
    height=200
).interactive()

# Save the chart as an SVG file in "Images/" directory
output_path = "Images/Annual Growth Rate of Loans by Credit Type.html"

chart.save(output_path)

# Display the chart
chart
```

#### 4.1.3 Analysis of Total Deposits and Annual Growth Rate

**Method:**
To analyze the trends in deposits over time and understand their annual growth rates, I created a  chart titled **Total Deposits and Annual Growth Rate**. To prepare the data, I started by loading the dataset `an10_final.dsv`, converting the `Date` column to a datetime format to make sure it was ready for time-based analysis. 

Next, I aggregated the data by month, computing monthly total deposit values. With this aggregated dataset, I calculated the annual growth rate of deposits by comparing each value to the same month from the previous year. To make the chart more readable, I also converted deposit values into millions.

I created two different visual elements: a bar chart to represent the total deposits in millions and a line chart for the annual growth rate. These were then combined into a single visual, with independent y-axes for each chart, so viewers could clearly see the relationship between the deposit levels and their growth rate. 

**Interpretation:** 
The third graph illustrates the evolution of deposits in Peru over the years, showing remarkable stability during the pandemic. Unlike loans, deposits remained relatively stable throughout this challenging period. Initially, there was a slight dip during the first months of the pandemic, but overall, deposits did not experience a drastic drop.

Several factors contributed to this stability. During uncertain times, individuals and businesses tend to save more, leading to increased deposits. The lockdowns and restrictions reduced consumer expenditures, allowing households and businesses to save a larger portion of their income. Additionally, government relief programs provided liquidity to businesses, and part of this liquidity was stored as deposits in financial institutions. This behavior underscores the contrasting dynamics of loans and deposits during times of economic stress.


```{python}
import pandas as pd
import altair as alt

# Load the an10_final.dsv data
AN10 = pd.read_csv("../Data/processed/an10_final.dsv", delimiter='|', encoding='latin1')

# Convert Date column to datetime format
AN10['Date'] = pd.to_datetime(AN10['Date'], errors='coerce')

# Ensure Deposits column is in numeric format
AN10['Deposits'] = pd.to_numeric(AN10['Deposits'], errors='coerce')

# Create a YearMonth column for grouping and aggregation
AN10['YearMonth'] = AN10['Date'].dt.to_period('M').astype(str)

# Aggregate data by month and calculate monthly total for Deposits
monthly_data = AN10.groupby(['YearMonth']).agg({
    'Deposits': 'sum'
}).reset_index()

# Calculate the annual growth rate for Deposits
monthly_data['Annual_Growth_Rate'] = monthly_data['Deposits'].pct_change(12) * 100

# Convert Deposits to millions for display in the chart
monthly_data['Deposits_Millions'] = monthly_data['Deposits'] / 1_000_000

# Define y-axis limits based on data range (for example, -50 to 50 for growth rate)
y_min, y_max = -50, 50

# Create the combined chart
# Bar chart for Deposits in millions
bars = alt.Chart(monthly_data).mark_bar(color='lightblue').encode(
    x=alt.X('YearMonth:T', title='Year'),
    y=alt.Y('Deposits_Millions:Q', title='Total Deposits (Millions)', axis=alt.Axis(format='~s'))
)

# Line chart for Annual Growth Rate with specified axis range
lines = alt.Chart(monthly_data).mark_line(color='orange').encode(
    x=alt.X('YearMonth:T'),
    y=alt.Y('Annual_Growth_Rate:Q', title='Annual Growth Rate (%)', scale=alt.Scale(domain=[y_min, y_max]), axis=alt.Axis(titleColor='black'))
).interactive()

# Combine both charts with independent y-axes but similar range
chart = alt.layer(bars, lines).resolve_scale(
    y='independent'
).properties(
    title='Total Deposits and Annual Growth Rate',
    width=400,
    height=200
)


# Save the chart as an SVG file in "Images/" directory
output_path = "Images/Total Deposits and Annual Growth Rate.html"

chart.save(output_path,format='html')

# Display the chart
chart


```

### 4.2 Financial Inclusion Shiny App

After conducting a historical analysis of loan and deposit trends, a Shiny app was developed to provide a dynamic, interactive examination of financial inclusion metrics in Peru. Below is an overview of the step-by-step process used to build the application, detailing data preparation, UI development, and server-side logic.

#### 4.2.1 Data Preparation

The application utilizes Python libraries such as Pandas, Altair, GeoPandas, and Shiny to construct the dashboard. I started by loading GeoJSON data for the geographic boundaries of Peruvian departments, as well as deposit and loan data from CSV files located in `Data/processed/`.

The datasets were aggregated and filtered:
- For `an10`, I grouped data by month and region. The total values were converted into millions for simplicity.
- For `an03`, I aggregated data by financial institution type, loan type, and industry category, converting values as appropriate.

Finally, the aggregated data was merged with the geographic dataset to map financial metrics to specific regions.

#### 4.2.2. User Interface (UI) Development

The user interface (UI) of the Shiny app was designed to provide two main sections: Financial Inclusion by Region and Financial Inclusion by Industry.

**Page by Region**: This page allows users to select a specific month-year to analyze the distribution of loans and deposits across Peru. Users can also choose to include or exclude the Lima region to tailor their analysis. Value boxes summarize key metrics, such as the sum of loans and deposits and the number of financial institutions. Maps for Loans and Deposits are visualized using Altair, allowing users to view the distribution of financial metrics by region (See Figure 2).

![Figure 2: Page by Region](Images/Shiny_Region.png)


**Page by Industry**: This page explores financial inclusion metrics broken down by industry category. Users can choose the date and choose whether to include or exclude personal/mortgage loans. Value boxes provide insights into loans, debtors, and financial institution counts by industry. Visuals include a pie chart for total loans by industry and a scatter plot comparing loan sizes to the number of debtors per industry category (See Figure 3).

![Figure 3: Page by Industry](Images/Shiny_Industry.png)


#### 4.2.3. Server Logic Implementation

The server logic for the app was implemented using Shiny’s server-side features, which dynamically render visual elements and provide real-time interactivity:

- **Data Filtering**: For each page, data is filtered based on user input. This includes filtering by date or excluding certain regions or industries. The filtered datasets are then used for visualization.
- **Summary Metrics**: Using `render.text()`, I calculated and displayed summary metrics, such as the total value of loans or the number of financial institutions. This helps users quickly grasp the scale of financial activity.

- **Interactive Visualizations**: 
    - **Geospatial Analysis**: Altair was used to create maps representing loan and deposit amounts by region. These maps give users an intuitive way to understand geographic differences.
    - **Industry Analysis**: Pie charts, bar charts, and scatter plots were created to give a comprehensive view of loans by industry. The scatter plot, in particular, helps visualize the relationship between loan sizes and the number of debtors across various industry categories.

#### 4.2.4. Navigation and Integration

The app integrates multiple panels using `ui.page_navbar()`, allowing seamless navigation between the two main sections Each page is equipped with custom input widgets, data visualizations, and summary statistics, making it easier for users to extract insights.

#### 4.2.5. Deployment

Finally, the Shiny app was deployed to provide an interactive **Financial Inclusion Dashboard**, aimed at visualizing key financial metrics across regions and industries. It utilizes public data from the Financial Authority of Peru (SBS) and the National Institute of Statistics and Information of Peru (INEI).

**Run the Shiny Dashboard**:
   ```bash
   shiny run Shiny-app/app.py
   ```

## 5. Conclusions

This project examines financial inclusion in Peru, focusing on the challenges and opportunities of a centralized financial system. Peru’s economic activity is heavily concentrated in Lima, which limits access to financial services for other regions. This analysis aims to understand the evolution of loans and deposits over the last decade, explore how this behavior varies across different loan types, and analyze financial activity both regionally and by industry.

The analysis relies on data provided by Peru’s Financial Stability Authority and the National Institute of Statistics and Information. Multiple datasets, including those detailing financial institutions, industry classifications, and geographic regions, were merged to create a comprehensive view of the financial landscape. Data cleaning involved standardizing formats, translating fields, and focusing on information from 2012 onwards to ensure consistency and accuracy.

The findings reveal that financial activity remains largely concentrated in Lima, but there are signs of gradual growth in other regions and sectors. Credit showed a steady upward trend prior to the COVID-19 pandemic, followed by a sharp contraction of approximately 40% in 2020 due to the economic shock. Despite this, targeted government interventions like the Reactiva Peru program helped to stabilize the financial system and promote recovery, especially in the business sector.

Further analysis into loan types indicated that government relief measures initially targeted businesses to sustain operations and were later extended to households, enabling a more balanced recovery. Deposits, on the other hand, demonstrated resilience during the pandemic, highlighting the inclination of individuals and businesses to save during uncertain times. The geographical distribution of loans and deposits, analyzed through a Shiny dashboard, illustrated that financial inclusion still needs significant expansion outside Lima, with specific focus areas being SMEs and underserved industries.

## 6. Limitations and Next Steps

The analysis in this project has some limitations that need to be addressed for future improvement. The data primarily focuses on regional and sectoral levels, which restricts the ability to drill down to individual borrower behavior and household-level insights. Additionally, the analysis lacks detailed demographic information that could provide a richer context on the factors influencing financial inclusion. Moving forward, incorporating more detailed metrics, such as credit-to-GDP ratios and demographic characteristics, will help provide a better understanding of the financial landscape. Furthermore, a peer group analysis of financial institutions, considering volume and concentration metrics, can help assess competitiveness and identify gaps in access to financial services. These steps will contribute towards a more comprehensive approach to addressing disparities in financial inclusion across different regions and sectors in Peru.

</div>